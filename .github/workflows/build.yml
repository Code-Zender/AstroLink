name: Build with Clang (Windows)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Ermöglicht manuellen Start

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Vulkan Headers&Loader
        run: |
          mkdir Vulkan
          Invoke-WebRequest -Uri "https://github.com/KhronosGroup/Vulkan-Headers/archive/refs/heads/main.zip" -OutFile "Vulkan/vulkan-headers.zip"
          Invoke-WebRequest -Uri "https://github.com/KhronosGroup/Vulkan-Loader/archive/refs/heads/main.zip" -OutFile "Vulkan/vulkan-loader.zip"
          Expand-Archive -Path "Vulkan/vulkan-headers.zip" -DestinationPath "Vulkan/"
          Expand-Archive -Path "Vulkan/vulkan-loader.zip" -DestinationPath "Vulkan/"
        shell: pwsh

      - name: Download SDL3 (Manually)
        run: |
          mkdir SDL3
          # Hier wird SDL 3.0.0-rc1 für Win64 heruntergeladen. Sollte diese URL nicht mehr gültig sein,
          # bitte die aktuelle Release-URL von https://github.com/libsdl-org/SDL/releases anpassen.
          Invoke-WebRequest -Uri "https://github.com/libsdl-org/SDL/releases/download/release-3.2.4/SDL3-3.2.4-win32-arm64.zip" -OutFile "SDL3/SDL3.zip"
          Expand-Archive -Path "SDL3/SDL3.zip" -DestinationPath "SDL3/"
        shell: pwsh

      - name: Download GLM from GitHub
        run: |
          mkdir glm
          Invoke-WebRequest -Uri "https://github.com/g-truc/glm/archive/refs/heads/master.zip" -OutFile "glm/glm.zip"
          Expand-Archive -Path "glm/glm.zip" -DestinationPath "glm/"

      - name: Download stb_image.h
        run: |
          mkdir include
          Invoke-WebRequest -Uri "https://raw.githubusercontent.com/nothings/stb/master/stb_image.h" -OutFile "include/stb_image.h"
          if (!(Test-Path "include/stb_image.h")) { 
            Write-Host "Download fehlgeschlagen!" 
            exit 1 
          }
        shell: pwsh

      - name: Set up Clang
        uses: egor-tensin/setup-clang@v1
        with:
          version: latest
          platform: x64

      - name: Verify Clang Installation
        run: clang --version

      - name: Compile with Clang
        run: |
          mkdir build
          clang++ -Wall -Wextra -std=c++20 -Iinclude -IVulkan/Vulkan-Headers-main/include -ISDL3/SDL3/include -Iglm/glm-master -o build/program.exe src/*.cpp -lSDL3main -lSDL3 -lvulkan-1


      - name: Upload Executable
        uses: actions/upload-artifact@v4
        with:
          name: compiled-program
          path: build/program.exe
