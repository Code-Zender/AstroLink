name: Build with Clang (Windows)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Erm√∂glicht manuellen Start

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download and Install Vulkan SDK
        run: |
          $VULKAN_VERSION="1.3.261.1"
          Invoke-WebRequest -Uri "https://sdk.lunarg.com/sdk/download/$VULKAN_VERSION/windows/VulkanSDK-$VULKAN_VERSION-Installer.exe" -OutFile "VulkanSDK-Installer.exe"
          Start-Process -FilePath ".\VulkanSDK-Installer.exe" -ArgumentList "/S" -NoNewWindow -Wait
          echo "VULKAN_SDK=C:\VulkanSDK\$VULKAN_VERSION" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "C:\VulkanSDK\$VULKAN_VERSION\Bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Install SDL3
        run: choco install sdl3 --pre

      - name: Install GLM
        run: choco install glm

      - name: Download stb_image.h
        run: |
          mkdir include
          Invoke-WebRequest -Uri "https://raw.githubusercontent.com/nothings/stb/master/stb_image.h" -OutFile "include/stb_image.h"

      - name: Set up Clang
        uses: egor-tensin/setup-clang@v1
        with:
          version: latest
          platform: x64

      - name: Verify Clang Installation
        run: clang --version

      - name: Verify Vulkan Installation
        run: |
          where vulkaninfo || echo "Vulkan SDK nicht gefunden!"
          vulkaninfo || echo "Fehler beim Abrufen der Vulkan-Info!"

      - name: Compile with Clang
        run: |
          mkdir build
          clang++ -Wall -Wextra -std=c++20 -Iinclude -o build/program.exe src/*.cpp -I"$env:VULKAN_SDK/Include" -L"$env:VULKAN_SDK/Lib" -lSDL3main -lSDL3 -lvulkan

      - name: Upload Executable
        uses: actions/upload-artifact@v4
        with:
          name: compiled-program
          path: build/program.exe
